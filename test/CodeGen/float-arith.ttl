// RUN: ttl-cc %s | FileCheck %s

function float add(float a, float b){
  var float c = a + b;
  return c;
} 

function float sub(float a, float b){
  var float c = a - b;
  return c;
}

function float mul(float a, float b){
  var float c = a * b;
  return c;
}

function float div(float a, float b){
  var float c = a / b;
  return c;
}

function float minus(float a){
  var float b = -a;
  return b;
}


// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py

// CHECK-LABEL:   func.func @add(
// CHECK-SAME:                   %[[VAL_0:.*]]: !ttl.float,
// CHECK-SAME:                   %[[VAL_1:.*]]: !ttl.float) -> !ttl.float {
// CHECK:           %[[VAL_2:.*]] = "ttl.add"(%[[VAL_0]], %[[VAL_1]]) : (!ttl.float, !ttl.float) -> !ttl.float
// CHECK:           "ttl.return"(%[[VAL_2]]) : (!ttl.float) -> ()
// CHECK:         }

// CHECK-LABEL:   func.func @sub(
// CHECK-SAME:                   %[[VAL_0:.*]]: !ttl.float,
// CHECK-SAME:                   %[[VAL_1:.*]]: !ttl.float) -> !ttl.float {
// CHECK:           %[[VAL_2:.*]] = "ttl.sub"(%[[VAL_0]], %[[VAL_1]]) : (!ttl.float, !ttl.float) -> !ttl.float
// CHECK:           "ttl.return"(%[[VAL_2]]) : (!ttl.float) -> ()
// CHECK:         }

// CHECK-LABEL:   func.func @mul(
// CHECK-SAME:                   %[[VAL_0:.*]]: !ttl.float,
// CHECK-SAME:                   %[[VAL_1:.*]]: !ttl.float) -> !ttl.float {
// CHECK:           %[[VAL_2:.*]] = "ttl.mul"(%[[VAL_0]], %[[VAL_1]]) : (!ttl.float, !ttl.float) -> !ttl.float
// CHECK:           "ttl.return"(%[[VAL_2]]) : (!ttl.float) -> ()
// CHECK:         }

// CHECK-LABEL:   func.func @div(
// CHECK-SAME:                   %[[VAL_0:.*]]: !ttl.float,
// CHECK-SAME:                   %[[VAL_1:.*]]: !ttl.float) -> !ttl.float {
// CHECK:           %[[VAL_2:.*]] = "ttl.div"(%[[VAL_0]], %[[VAL_1]]) : (!ttl.float, !ttl.float) -> !ttl.float
// CHECK:           "ttl.return"(%[[VAL_2]]) : (!ttl.float) -> ()
// CHECK:         }

// CHECK-LABEL:   func.func @minus(
// CHECK-SAME:                     %[[VAL_0:.*]]: !ttl.float) -> !ttl.float {
// CHECK:           %[[VAL_1:.*]] = "ttl.minus"(%[[VAL_0]]) : (!ttl.float) -> !ttl.float
// CHECK:           "ttl.return"(%[[VAL_1]]) : (!ttl.float) -> ()
// CHECK:         }

